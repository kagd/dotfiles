[alias]
	# View the SHA, description, and history graph of the latest 20 commits
	l = log --pretty=oneline -n 20 --graph

	# View the current working tree status using the short format
	s = status -s
	st = "unpushed; status"	

	# Show the diff between the latest commit and the current state
	d = !"git diff-index --quiet HEAD -- || clear; git diff --patch-with-stat"
	
	# `git di $number` shows the diff between the state `$number` revisions ago and the current state
	di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"
	
	# list git log in one line format
	lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short

	# Pull in remote changes for the current repository and all its submodules
	p = !"git pull; git submodule foreach git pull origin master"

	# Commit all changes
	cm = !git add -A && git commit -m

	# Switch to a branch, creating it if necessary
	go = checkout -B

	# Show verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch -a
	remotes = remote -v

	# Credit an author on the latest commit
	credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"

	# Interactive rebase with the given number of latest commits
	reb = "!r() { git rebase -i HEAD~$1; }; r"

	# Undo a `git push`
	undopush = push -f origin HEAD^:master

	# Get the number of unpushed commits
	unpushed = !GIT_CURRENT_BRANCH=$(git name-rev --name-only HEAD) && git log origin/$GIT_CURRENT_BRANCH..$GIT_CURRENT_BRANCH --oneline

	# remove all *merged* local branches, minus the current one
	brm = !"git branch | grep -v ^* | xargs git branch -d"

	# find a file by name
	find = !"git ls-files | grep -i"

	# clear uncommited changes
	cleanout = !"git checkout -- ."

[core]
	# Use custom `.gitignore`
	excludesfile = ~/.gitignore

[color]
	# Use colors in Git commands that are capable of colored output when outputting to the terminal
	ui = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = yellow
	changed = green
	untracked = cyan
[merge]
	# Include summaries of merged commits in newly created merge commit messages
	log = true
[user]
	name = Grant Klinsing
	email = grant@grantrklinsing.com
[mergetool]
	keepBackup = true
